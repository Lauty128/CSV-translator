import{table as e,inherited_table as t,count_rows_columns as a}from"./table.js";let Table;if("/table"==window.location.pathname||"/intervals"==window.location.pathname){if(localStorage.getItem("table_data")){let n=JSON.parse(localStorage.getItem("table_data"));console.log(n);let{rows:l,columns:i}=a(n);(Table=new t(l,i)).printData(n),localStorage.removeItem("table_data")}else Table=new e}async function submitInterval(){let e=document.getElementById("quantity-input").value,t=document.getElementById("intervalType-input").value;if(e<=0)return;let a=new FormData(document.getElementById("Table")),n=new URLSearchParams(a),l=await fetch(`/api/intervals?type=${t}&quantity=${e}`,{method:"post",body:n}).then(e=>e.json());200==l.status&&(delete l.status,localStorage.setItem("table_data",JSON.stringify(l.table)),delete l.table,localStorage.setItem("interval_data",JSON.stringify(l)),window.location.href="/table")}document.querySelector(".TableContainer").addEventListener("click",async e=>{let{target:t}=e;switch(t.getAttribute("id")){case"newRow_button":Table.newRow(e);break;case"newColumn_button":Table.newColumn(e);break;case"cancelTable":Table.reset();break;case"createIntervalButton":await submitInterval();break;case"comeBackButton":window.location.href="/"}}),"/intervals"==window.location.pathname&&document.querySelector(".Table").addEventListener("submit",e=>e.preventDefault()),"/submit"==window.location.pathname&&document.getElementById("input_file").addEventListener("change",async e=>{e.preventDefault();let t=new FormData(document.getElementById("Table")),a=await fetch("/api/submit",{method:"post",body:t}).then(e=>e.json());if(200===a.status)localStorage.setItem("table_data",JSON.stringify(a.data)),window.location.href="/table";else throw Error("Ocurrio un error al subir el archivo")});